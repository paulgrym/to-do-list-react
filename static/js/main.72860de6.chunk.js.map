{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","value","onChange","target","placeholder","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","props","children","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72860de6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n    if (trimmedNewTaskContent === \"\") {\r\n      return;\r\n    };\r\n    addNewTask(trimmedNewTaskContent);\r\n    setNewTaskContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n        className=\"form__input\"\r\n        placeholder=\"Co jest do zrobienia?\" />\r\n      <button className=\"form__button\">Dodaj zadanie</button>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"list\">\r\n    {tasks.map(task => (\r\n      <li\r\n        key={task.id}\r\n        className={`list__item ${task.done && hideDone ? \"list__item--hidden\" : \"\"}`}\r\n      >\r\n        <button\r\n          className=\"list__button\"\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ“\" : \"\"}\r\n        </button>\r\n        <span className={`list__taskContent ${task.done ? \"list__taskContent--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button\r\n          className=\"list__button list__button--remove\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n  if (tasks.length === 0) {\r\n    return null\r\n  };\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button\r\n        className=\"buttons__button\"\r\n        onClick={toggleHideDone}\r\n      >\r\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n      </button>\r\n      <button\r\n        className=\"buttons__button\"\r\n        disabled={tasks.every(({ done }) => done)}\r\n        onClick={setAllDone}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <header className=\"section__header\">\r\n      <h2 className=\"section__title\">{title}</h2>\r\n      {extraHeaderContent}\r\n    </header>\r\n    {body}\r\n  </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header className=\"header\">\r\n    <h1 className=\"header__title\">{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = (props) => (\r\n  <main className=\"container\">\r\n    {props.children}\r\n  </main>\r\n);\r\n\r\nexport default Container;","import { useEffect, useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const getTasks = () => {\n    const initialValue = JSON.parse(localStorage.getItem(\"tasks\"));\n    return initialValue || []\n  };\n  \n  const [hideDone, setHideDone] = useState(false);\n\n  const [tasks, setTasks] = useState(getTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => setHideDone(hideDone => !hideDone);\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id))\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })))\n  };\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body=\n        {<Tasks\n          tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone}\n        />}\n        extraHeaderContent=\n        {<Buttons\n          tasks={tasks}\n          hideDone={hideDone}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n        />}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}