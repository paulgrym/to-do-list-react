{"version":3,"sources":["globalStyles.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","StyledForm","styled","form","theme","breakpoints","medium","StyledInput","input","StyledButton","button","colors","primaryColor","hoverColor","activeColor","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","value","onChange","target","placeholder","ref","StyledList","ul","StyledItem","li","hidden","css","StyledContent","span","done","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","className","onClick","id","content","StyledButtons","div","small","Buttons","toggleHideDone","setAllDone","length","disabled","every","StyledSection","section","StyledHeader","header","StyledTitle","h2","Section","title","body","extraHeaderContent","h1","Header","StyledContainer","main","Container","props","children","App","setHideDone","localStorageKey","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEaA,EAAcC,YAAH,8Q,OCAXC,EAAaC,IAAOC,KAAV,kIAID,qBAAGC,MAAkBC,YAAYC,UAK1CC,EAAcL,IAAOM,MAAV,0FAMXC,EAAeP,IAAOQ,OAAV,8dACH,qBAAGN,MAAkBO,OAAOC,gBAO5B,qBAAGR,MAAkBC,YAAYC,UAM/B,qBAAGF,MAAkBO,OAAOE,cAI5B,qBAAGT,MAAkBC,YAAYC,UAMjC,qBAAGF,MAAkBO,OAAOG,e,OCPrCC,EA/BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAEd,EAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAAWC,iBAAO,MAaxB,OACE,eAACpB,EAAD,CAAYqB,SAZO,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAwBP,EAAeQ,OACf,KAA1BD,IAGJT,EAAWS,GACXN,EAAkB,IAClBC,EAASO,QAAQC,UAIjB,UACE,cAACrB,EAAD,CACEsB,MAAOX,EACPY,SAAU,SAACP,GAAD,OAAWJ,EAAkBI,EAAMQ,OAAOF,QACpDG,YAAY,wBACZC,IAAKb,IAEP,cAACX,EAAD,gCCzBOyB,EAAahC,IAAOiC,GAAV,0EAKVC,EAAalC,IAAOmC,GAAV,yNASnB,qBAAGC,QAAuBC,YAAJ,oDAKbC,EAAgBtC,IAAOuC,KAAV,mCACtB,qBAAGC,MAAmBH,YAAJ,oEAKT9B,EAAeP,IAAOQ,OAAV,8UAkBrB,qBAAGiC,QAAuBJ,YAAJ,+MChBXK,EA3BD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAAYC,EAAhC,EAAgCA,eAAhC,OACZ,cAACd,EAAD,UACGW,EAAMI,KAAI,SAAAC,GAAI,OACb,eAACd,EAAD,CAEEE,OAAQY,EAAKR,MAAQI,EAFvB,UAIE,cAAC,EAAD,CACEK,UAAU,eACVC,QAAS,kBAAMJ,EAAeE,EAAKG,KAFrC,SAIGH,EAAKR,KAAO,SAAM,KAErB,cAACF,EAAD,CAAeE,KAAMQ,EAAKR,KAA1B,SACGQ,EAAKI,UAER,cAAC,EAAD,CACEX,QAAM,EACNS,QAAS,kBAAML,EAAWG,EAAKG,KAFjC,4BAZKH,EAAKG,UCJLE,EAAgBrD,IAAOsD,IAAV,gNAMJ,qBAAGpD,MAAkBC,YAAYoD,SAM1ChD,EAAeP,IAAOQ,OAAV,kQAGd,qBAAGN,MAAkBO,OAAOC,gBAM1B,qBAAGR,MAAkBO,OAAOE,cCA1B6C,EArBC,SAAC,GAAqD,IAAnDb,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,SAAUa,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAClD,OAAqB,IAAjBf,EAAMgB,OACD,KAGP,eAACN,EAAD,WACE,eAAC,EAAD,CACEH,QAASO,EADX,UAGGb,EAAW,aAAU,QAHxB,qBAKA,cAAC,EAAD,CACEgB,SAAUjB,EAAMkB,OAAM,qBAAGrB,QACzBU,QAASQ,EAFX,uCCXOI,EAAgB9D,IAAO+D,QAAV,iGAKbC,EAAehE,IAAOiE,OAAV,0LAMH,qBAAG/D,MAAkBC,YAAYoD,SAK1CW,EAAclE,IAAOmE,GAAV,kFCNTC,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACd,eAACT,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,UAAcG,IACbE,KAEFD,MCNQJ,EAAclE,IAAOwE,GAAV,oDCMTC,EANA,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OACb,iCACE,cAAC,EAAD,UAAcA,OCFLK,EAAkB1E,IAAO2E,KAAV,oECMbC,EANG,SAACC,GAAD,OAChB,cAACH,EAAD,UACGG,EAAMC,Y,eC+CIC,MA1Cf,WACE,MAAgChE,oBAAS,GAAzC,mBAAO6B,EAAP,KAAiBoC,EAAjB,KAIA,ECZsB,WACtB,IAAMC,EAAkB,QAMxB,EAA0BlE,oBALT,WAEf,OADqBmE,KAAKC,MAAMC,aAAaC,QAAQJ,KAC9B,MAGzB,mBAAOtC,EAAP,KAAc2C,EAAd,KAkCA,OAhCAC,qBAAU,WACRH,aAAaI,QAAQP,EAAiBC,KAAKO,UAAU9C,MACpD,CAACA,IA8BG,CACLA,QACAE,WA9BiB,SAACM,GAClBmC,GAAS,SAAA3C,GAAK,OAAIA,EAAM+C,QAAO,SAAA1C,GAAI,OAAIA,EAAKG,KAAOA,SA8BnDL,eA3BqB,SAACK,GACtBmC,GAAS,SAAA3C,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAC1B,OAAIA,EAAKG,KAAOA,EACP,2BAAKH,GAAZ,IAAkBR,MAAOQ,EAAKR,OAEzBQ,SAuBTU,WAnBiB,WACjB4B,GAAS,SAAA3C,GAAK,OAAIA,EAAMI,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBR,MAAM,WAmBtD1B,WAhBiB,SAACsC,GAClBkC,GAAS,SAAA3C,GAAK,4BACTA,GADS,CAEZ,CACES,UACAZ,MAAM,EACNW,GAAIR,EAAMgB,OAAShB,EAAMA,EAAMgB,OAAS,GAAGR,GAAK,EAAI,UDlBtDwC,GALFhD,EADF,EACEA,MACAE,EAFF,EAEEA,WACAC,EAHF,EAGEA,eACAY,EAJF,EAIEA,WACA5C,EALF,EAKEA,WAGF,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQuD,MAAM,qBACd,cAAC,EAAD,CACEA,MAAM,qBACNC,KAAM,cAAC,EAAD,CAAMxD,WAAYA,MAG1B,cAAC,EAAD,CACEuD,MAAM,mBACNC,KACC,cAAC,EAAD,CACC3B,MAAOA,EACPC,SAAUA,EACVC,WAAYA,EACZC,eAAgBA,IAElByB,mBACC,cAAC,EAAD,CACC5B,MAAOA,EACPC,SAAUA,EACVa,eA/Be,kBAAMuB,GAAY,SAAApC,GAAQ,OAAKA,MAgC9Cc,WAAYA,UEhCPkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAerG,MCVE,CACnBO,OAAQ,CACNC,aAAc,sBACdC,WAAY,sBACZC,YAAa,uBAEfT,YAAa,CACXC,OAAQ,IACRmD,MAAO,MDEP,UACE,cAAC1D,EAAD,IACA,cAAC,EAAD,SAGJ2G,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbd1294d.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    background-color: #eee;\r\n    margin: 0 20px;\r\n    word-break: break-all;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  padding: 20px;\r\n\r\n  @media (max-width:${({ theme }) => theme.breakpoints.medium}px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background-color: ${({ theme }) => theme.colors.primaryColor};\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-left: 20px;\r\n  transition: background-color 0.3s, transform 0.3s;\r\n\r\n  @media (max-width:${({ theme }) => theme.breakpoints.medium}px){\r\n    margin-left: 0;\r\n    margin-top: 10px;\r\n  }\r\n\r\n  &:hover{\r\n    background-color: ${({ theme }) => theme.colors.hoverColor};\r\n    cursor: pointer;\r\n    transform: scale(1.1);\r\n\r\n    @media (max-width:${({ theme }) => theme.breakpoints.medium}px){\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  &:active{\r\n    background-color: ${({ theme }) => theme.colors.activeColor};\r\n  }\r\n`;\r\n","import { useState, useRef } from \"react\";\r\nimport { StyledForm, StyledInput, StyledButton } from \"./styled\"\r\n\r\nconst Form = ({ addNewTask }) => {\r\n\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n  const inputRef = useRef(null);\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n    if (trimmedNewTaskContent === \"\") {\r\n      return;\r\n    };\r\n    addNewTask(trimmedNewTaskContent);\r\n    setNewTaskContent(\"\");\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={onFormSubmit}>\r\n      <StyledInput\r\n        value={newTaskContent}\r\n        onChange={(event) => setNewTaskContent(event.target.value)}\r\n        placeholder=\"Co jest do zrobienia?\"\r\n        ref={inputRef}\r\n      />\r\n      <StyledButton>\r\n        Dodaj zadanie\r\n      </StyledButton>\r\n    </StyledForm>\r\n  )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n  padding: 0 20px 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const StyledItem = styled.li`\r\n  list-style-type: none;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr auto;\r\n  grid-gap: 10px;\r\n  align-items: center;\r\n\r\n  ${({ hidden }) => hidden && css`\r\n    display:none;\r\n  `}\r\n`;\r\n\r\nexport const StyledContent = styled.span`\r\n  ${({ done }) => done && css`\r\n    text-decoration:line-through;\r\n  `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  background-color: hsl(120, 88%, 27%);\r\n  color: white;\r\n  justify-self: center;\r\n  border: none;\r\n  transition: 0.4s;\r\n\r\n  &:hover{\r\n  background-color: hsl(120, 88%, 32%);\r\n  cursor: pointer;\r\n  }\r\n\r\n  &:active{\r\n    background-color: hsl(120, 88%, 37%);\r\n  }\r\n\r\n  ${({ remove }) => remove && css`\r\n    background-color: hsl(0, 93%, 58%);\r\n\r\n    &:hover{\r\n      background-color: hsl(0, 93%, 63%);\r\n    }\r\n\r\n    &:active{\r\n      background-color: hsl(0, 93%, 68%);\r\n    }\r\n  `}\r\n`;","import { StyledList, StyledItem, StyledContent, StyledButton } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <StyledList>\r\n    {tasks.map(task => (\r\n      <StyledItem\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <StyledButton\r\n          className=\"list__button\"\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ“\" : \"\"}\r\n        </StyledButton>\r\n        <StyledContent done={task.done}>\r\n          {task.content}\r\n        </StyledContent>\r\n        <StyledButton\r\n          remove\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </StyledButton>\r\n      </StyledItem>\r\n    ))}\r\n  </StyledList>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  flex-grow: 1;\r\n\r\n  @media (max-width:${({ theme }) => theme.breakpoints.small}px){\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  background-color: inherit;\r\n  color: ${({ theme }) => theme.colors.primaryColor};\r\n  padding: 10px 0;\r\n  margin: 0 0 0 20px;\r\n  transition: color 0.4s;\r\n\r\n  &:hover{\r\n    color: ${({ theme }) => theme.colors.hoverColor};\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:disabled{\r\n    color: #888;\r\n  }\r\n`;","import { StyledButtons, StyledButton } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n  if (tasks.length === 0) {\r\n    return null\r\n  };\r\n  return (\r\n    <StyledButtons>\r\n      <StyledButton\r\n        onClick={toggleHideDone}\r\n      >\r\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n      </StyledButton>\r\n      <StyledButton\r\n        disabled={tasks.every(({ done }) => done)}\r\n        onClick={setAllDone}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </StyledButton>\r\n    </StyledButtons>\r\n  )\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  background-color: white;\r\n  box-shadow: 1px -1px 5px 0px #DDDDDD;\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n  display: flex;\r\n  border-bottom: 1px solid #ddd;\r\n  margin-top: 10px;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width:${({ theme }) => theme.breakpoints.small}px){\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n  padding: 20px 0;\r\n  margin: 0;\r\n  font-size: 20px;\r\n`;","import { StyledSection, StyledHeader, StyledTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <StyledSection>\r\n    <StyledHeader>\r\n      <StyledTitle>{title}</StyledTitle>\r\n      {extraHeaderContent}\r\n    </StyledHeader>\r\n    {body}\r\n  </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledTitle = styled.h1`\r\n  margin: 30px 0 20px;\r\n`;\r\n","import { StyledTitle } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <StyledTitle>{title}</StyledTitle>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n  max-width: 850px;\r\n  margin: 0 auto;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = (props) => (\r\n  <StyledContainer>\r\n    {props.children}\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Container;","import { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => setHideDone(hideDone => !hideDone);\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n\n      <Section\n        title=\"Lista zadaÅ„\"\n        body=\n        {<Tasks\n          tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone}\n        />}\n        extraHeaderContent=\n        {<Buttons\n          tasks={tasks}\n          hideDone={hideDone}\n          toggleHideDone={toggleHideDone}\n          setAllDone={setAllDone}\n        />}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const localStorageKey = \"tasks\";\r\n  const getTasks = () => {\r\n    const initialTasks = JSON.parse(localStorage.getItem(localStorageKey));\r\n    return initialTasks || []\r\n  };\r\n\r\n  const [tasks, setTasks] = useState(getTasks);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id))\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, done: !task.done };\r\n      }\r\n      return task;\r\n    }));\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })))\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './globalStyles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n  colors: {\r\n    primaryColor: \"hsl(180, 100%, 25%)\",\r\n    hoverColor: \"hsl(180, 100%, 30%)\",\r\n    activeColor: \"hsl(180, 100%, 35%)\"\r\n  },\r\n  breakpoints: {\r\n    medium: 768,\r\n    small: 540\r\n  }\r\n}"],"sourceRoot":""}